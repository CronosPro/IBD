------------dinish autogenerated part----------------
local ClassManager = nil;
local Entity = nil;
local unloadController = nil;
local formsController = nil;
local constanta = nil;
local parentEntity = nil;
local objectList = nil;
local childForms = {};
local isNewObject = false;
local currentForm = nil;


local lblRelationType = nil;
local dpdRelationType = nil;
local lblRelationInfo = nil;
local txtRelationInfo = nil;
local lblNotes = nil;
local txtNotes = nil;
local lstPersonRelations = nil;
local pnlButtons = nil;
local btnSave = nil;
local btnClose = nil;
local txtInfoPanel = nil;
local pnlRelatedPeople = nil;
local lnkPerson = nil;

function getCurrentForm()
    return currentForm;
end
function getCurrentFormNameInList()
    return currentForm.NameInList;
end
function setCurrentForm(currentFormValue)
    currentForm = currentFormValue;
end

function setClassManager(ClassManagerNew)
    ClassManager = ClassManagerNew;
end
function getClassManager()
    return ClassManager;
end

function getObjectList()
    return objectList;
end
function setObjectList(objectListValue)
    objectList = objectListValue;
end

function getEntity()	
    return Entity;
end
function setEntity(entityValue)
    Entity = entityValue;
end

function getIsNewObject()
    return isNewObject;
end
function setIsNewObject(isNewObjectValue)
    isNewObject = isNewObjectValue;
end

function getParentEntity()	
    return parentEntity;
end
function setParentEntity(parentEntityValue)
    parentEntity = parentEntityValue;
end

function Форма_Open( form	)    
	setClassManager(Arg.ClassManager)
    setControllersReferences()
	setCurrentForm(form);	
    return true;
end

function Форма_Load( form )			
	getClassManager().setClass(form, form)	
	setObjectList(Arg.FormModule);		
	setParentEntity(Arg.MainObjectBean);	
    local personRelationStrings =  {}		
	if (Arg.Data ~= nil) then		
		local personEntities = {};					
        for key,entity in pairs(Arg.Data) do			            
			if (entity.getEntityBaseCode() == constanta.getCnstPersonRelations()) then				
				Entity = entity;
                form.RecordNumber = Entity.getEntityRecord().SN;
			elseif (entity.getEntityBaseCode() == constanta.getCnstPerson()) then
				table.insert(personEntities, entity);				
				table.insert(personRelationStrings, entity.toShortString(true));			
            end
        end					
		Entity.setPersonEntities(personEntities)						
    end	
    if (Entity == nil) then
        Форма_UnloadForm( form);
    else			
		setControls(form);						
		addLstPersonRelationsItems(personRelationStrings);		
        setFormFromEntity(getEntity());						
        table.insert(childForms,form);		
		setViewAsNewObject(Arg.viewAsNewObject);			
		setIsNewObject(Arg.isNewObject);
    end		
end

function setControllersReferences()
    unloadController = getClassManager().getClass("UnloadController");
    formsController = getClassManager().getClass("FormsController");
    constanta = getClassManager().getClass("Constanta");
end

function Форма_UnloadForm( form, mode )
    unloadController.doUnload(getClassManager(), form, childForms);
    getClassManager().setClass(form, nil)
    return true;
end

function setControls(form)	
    lblRelationType = form.lblRelationType;
    dpdRelationType = form.dpdRelationType;
    lblRelationInfo = form.lblRelationInfo;
    txtRelationInfo = form.txtRelationInfo;
    lblNotes = form.lblNotes;
    txtNotes = form.txtNotes;
    lstPersonRelations = form.lstPersonRelations;
    pnlButtons = form.pnlButtons;
    btnSave = form.btnSave;
    btnClose = form.btnClose;
    txtInfoPanel = form.txtInfoPanel;
    pnlRelatedPeople = form.pnlRelatedPeople;
	lnkPerson = form.lnkPerson.Controls["Область данных"].Form;
	Arg.MainForm = form;	
	if (table.count(getEntity().getPersonEntities())>1) then							
		for i=0,table.count(getEntity().getPersonEntities()) do
			lnkPerson:RemoveRecord(lnkPerson.Record.SN)			
		end				
		lnkPerson:CloseForm();	
		setControlVisible(lnkPerson, false);		
		local deltaY = lnkPerson.Height - pnlRelatedPeople.Height;
		pnlButtons.Y = pnlButtons.Y - deltaY;
		form.Height = form.Height - deltaY;		
	else				
		setControlVisible(pnlRelatedPeople, false);				
		lnkPerson = form.lnkPerson.Controls["Область данных"].Form.Module;				
		lnkPerson.setArg(Arg);				
		lnkPerson.Форма_Open(form.lnkPerson.Controls["Область данных"].Form)				
		lnkPerson.Форма_Load(form.lnkPerson.Controls["Область данных"].Form)						
		lnkPerson.setPnlButtonsVisibility(false);					
	end			
    populateLists();
	setTxtInfoPanelBackColor(constanta.getSystemBackColor());
end


function populateLists()

end

function setFormFromEntity(entity)
    setDpdRelationTypeSelectedItem(entity.getRelationType());
    setTxtRelationInfoText(entity.getRelationInfo());
    setTxtNotesText(entity.getNotes());    
end

function setLblRelationTypeText( lblRelationTypeValue )
   lblRelationType.Value = lblRelationTypeValue
end
function getLblRelationTypeText( )
    return lblRelationType.Value
end

function addDpdRelationTypeItem( dpdRelationTypeValue )
   dpdRelationType:Add(dpdRelationTypeValue)
end
function addDpdRelationTypeItems( dpdRelationTypeValues )
    if dpdRelationTypeValues ~= nil then
        for key, value in pairs (dpdRelationTypeValues) do
            addDpdRelationTypeItem(value)
        end
    end
end
function clearDpdRelationTypeItesm( )
   dpdRelationType:Clear(index)
end
function getDpdRelationTypeSelectedItem( )
    return dpdRelationType.Text
end
function setDpdRelationTypeSelectedItem( dpdRelationTypeItemValue)    
	dpdRelationType.Value = dpdRelationTypeItemValue
end
function getDpdRelationTypeSelectedIndex( )
    return dpdRelationType.SelectedIndex
end
function getDpdRelationTypeSelectedCode( )
    return dpdRelationType.Value
end
function setDpdRelationTypeSelectedIndex( dpdRelationTypeIndexValue )
    dpdRelationType.SelectedIndex = dpdRelationTypeIndexValue
end
function setDpdRelationTypeEnabled( isDpdRelationTypeEnabled )
   dpdRelationType.Enabled = isDpdRelationTypeEnabled
end

function setLblRelationInfoText( lblRelationInfoValue )
   lblRelationInfo.Value = lblRelationInfoValue
end
function getLblRelationInfoText( )
    return lblRelationInfo.Value
end

function getTxtRelationInfoText( )
    return txtRelationInfo.Value
end
function setTxtRelationInfoText( txtRelationInfoValue )
    txtRelationInfo.Value = txtRelationInfoValue
end
function setTxtRelationInfoEnabled( isTxtRelationInfoEnabled )
   txtRelationInfo.Enabled = isTxtRelationInfoEnabled
end

function setLblNotesText( lblNotesValue )
   lblNotes.Value = lblNotesValue
end
function getLblNotesText( )
    return lblNotes.Value
end

function getTxtNotesText( )
    return txtNotes.Value
end
function setTxtNotesText( txtNotesValue )
    txtNotes.Value = txtNotesValue
end
function setTxtNotesEnabled( isTxtNotesEnabled )
   txtNotes.Enabled = isTxtNotesEnabled
end

function setBtnSaveText( btnSaveValue )
   btnSave.Text = btnSaveValue
end
function getBtnSaveText( )
    return btnSave.Text
end
function setBtnSaveEnabled( isBtnSaveEnabled )
   btnSave.Enabled = isBtnSaveEnabled
end

function setBtnCloseText( btnCloseValue )
   btnClose.Text = btnCloseValue
end
function getBtnCloseText( )
    return btnClose.Text
end
function setBtnCloseEnabled( isBtnCloseEnabled )
   btnClose.Enabled = isBtnCloseEnabled
end

function btnClose_Click( control )
    setFormFromEntity(getEntity());		
    Форма_UnloadForm( control.Form);
end

function setTxtInfoPanelText( txtInfoPanelText )
    txtInfoPanel.Text = txtInfoPanelText
end
function setTxtInfoPanelText( txtInfoPanelText )
    txtInfoPanel.Text = txtInfoPanelText
end
function setTxtInfoPanelEnabled( isTxtInfoPanelEnabled )
   txtInfoPanel.Enabled = isTxtInfoPanelEnabled
end
function setTxtInfoPanelBackColor( txtInfoPanelBackColor )
   txtInfoPanel.BackColor = txtInfoPanelBackColor
end


function addLstPersonRelationsItem( lstPersonRelationsValue )
   lstPersonRelations:Add(lstPersonRelationsValue)
end
function insertLstPersonRelationsItem( lstPersonRelationsValue, index )
   lstPersonRelations:Insert(lstPersonRelationsValue, index);
end
function addLstPersonRelationsItems( lstPersonRelationsValues )
    if lstPersonRelationsValues ~= nil then
        for key, value in pairs (lstPersonRelationsValues) do
            addLstPersonRelationsItem(value);
        end
    end
end
function clearLstPersonRelationsItems( )
   lstPersonRelations:Clear();
end
function removeLstPersonRelationsItem( index )
   lstPersonRelations:Remove(index);
end
function getLstPersonRelationsItem( index )
    return lstPersonRelations:GetItem(index);
end
function setLstPersonRelationsItemChecked( index, isChecked)
    lstPersonRelations:SetItemChecked(index, isChecked);
end
function isLstPersonRelationsItemChecked( lstPersonRelationsIndexValue )
    lstPersonRelations:IsIndexChecked (lstPersonRelationsIndexValue);
end
function getLstPersonRelationsSelectedIndex( )
    return lstPersonRelations.SelectedIndex;
end
function getLstPersonRelationsCheckedItems( )
    return lstPersonRelations.CheckedItems;
end
function getLstPersonRelationsCheckedIndices( )
    return lstPersonRelations.CheckedIndices;
end
function getLstPersonRelationsItemsCount( )
    return lstPersonRelations.ItemsCount;
end
function setLstPersonRelationsEnabled( isLstPersonRelationsEnabled )
   lstPersonRelations.Enabled = isLstPersonRelationsEnabled
end


function setBtnAddRelationText( btnAddRelationValue )
   btnAddRelation.Text = btnAddRelationValue
end
function getBtnAddRelationText( )
    return btnAddRelation.Text
end
function setBtnAddRelationEnabled( isBtnAddRelationEnabled )
   btnAddRelation.Enabled = isBtnAddRelationEnabled
end

function setBtnDeleteRelationText( btnDeleteRelationValue )
   btnDeleteRelation.Text = btnDeleteRelationValue
end
function getBtnDeleteRelationText( )
    return btnDeleteRelation.Text
end
function setBtnDeleteRelationEnabled( isBtnDeleteRelationEnabled )
   btnDeleteRelation.Enabled = isBtnDeleteRelationEnabled
end
------------finish autogenerated part----------------

function btnSave_Click( control, isInternal )    
	setIsNewObject(false);
	Entity.setBeanFromView(btnSave.Form.Module);		
    if (Entity.saveBeanToDb() == true) then								
		if (isControlVisible(pnlRelatedPeople)) then
			if (table.count(getEntity().getPersonEntities()) ~= getLstPersonRelationsItemsCount()) then
				table.remove(getEntity().getPersonEntities());
			end
		elseif (lnkPerson ~= nil) then			
			lnkPerson.btnSave_Click();	
		end
		getObjectList().refreshForm(Entity);				
        setTxtInfoPanelText("Запись успешно сохранена в базу данных");
		if (not isInternal) then
			Форма_UnloadForm( btnSave.Form);
		end
    else
        setTxtInfoPanelText("ВНИМАНИЕ!!! Запись не сохранена в базу данных");
    end
end

function btnAddRelation_Click( control )
	table.insert(childForms,formsController.openNeccessaryForm(getClassManager(), control, nil));
end

function lstPersonRelations_DoubleClick( control )
	local i=0;	
	local chosenObj = {}
	local selectedIndex = getLstPersonRelationsSelectedIndex();
	local selectedObject = nil;
	--определение какой объект запрошен
	for key, object in pairs(getEntity().getPersonEntities()) do		
		i = i+1;
		if selectedIndex == i then			
			selectedObject = object;					
			break;
		end
	end		
	if selectedObject ~= nil then					
		local objRecordSet = RecordSet.new({},CroApp.GetBank():GetBase(selectedObject.getEntityRecord().Base.Code));						
		objRecordSet:Add(selectedObject.getEntityRecord().SN);							
		table.insert(childForms,formsController.openNeccessaryForm(getClassManager(), control, objRecordSet));
	else
		MsgBox("Не выделен ни один из объектов списка. Повторите операцию.")
	end	
end

function refreshForm(newObject)				
	local isExists = false;			
	local personEntities = {};	
	for key, object in pairs(getEntity().getPersonEntities()) do														
		if (object.getEntityRecord().SN == newObject.getEntityRecord().SN) then						 									
			removeLstPersonRelationsItem(key)												
			insertLstPersonRelationsItem(newObject.toShortString(true), key)							
			object.setBeanFromRecord(newObject.getEntityRecord());						
			isExists = true;												
		end		
		table.insert(personEntities, object)
	end	
	if (not isExists) then		
		--table.insert(getEntity().getPersonEntities(),newObject)	
		addLstPersonRelationsItem(newObject.toShortString(true));	
		table.insert(personEntities, newObject)
	end		
	getEntity().setPersonEntities(personEntities);
	getObjectList().refreshForm(getEntity());	
end

function setControlVisible (control, isVisible)
	control.Visible = isVisible;
end
function isControlVisible (control)
	return control.Visible;
end
function setViewAsNewObject(isNew)	
	setIsNewObject(isNew);
	if (lnkPerson ~=nil) then		
		lnkPerson.setViewAsNewObject(isNew)		
	end	
end
function Форма_BeforeSaveForm( event )
--	event.PermitSave = false;
end
